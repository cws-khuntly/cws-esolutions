#!/usr/bin/env ksh
#==============================================================================
#
#          FILE:  plugin
#         USAGE:  . plugin
#   DESCRIPTION:  Sets and unsets plugin variables
#
#       OPTIONS:  ---
#  REQUIREMENTS:  ---
#          BUGS:  ---
#         NOTES:  ---
#        AUTHOR:  Kevin Huntly <kmhuntly@gmail.com>
#       COMPANY:  CaspersBox Web Services
#       VERSION:  1.0
#       CREATED:  ---
#      REVISION:  ---
#==============================================================================

[[ "$(/usr/bin/env uname)" = CYGWIN_NT* ]] && [ -z "$(set | /usr/bin/env grep CYGWIN)" ] && typeset -rx CYGWIN="error_start=C:/cygwin/bin/gdb.exe -nw %1 %2";

[ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "true" ] && set -x;
[ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set -x;

CNAME="$(/usr/bin/env basename "${0}")";
THIS_CNAME="${CNAME}";
SCRIPT_ABSOLUTE_PATH="$(cd "${0%/*}" 2>/dev/null; /usr/bin/env echo "${PWD}"/"${0##*/}")";
SCRIPT_ROOT="$(/usr/bin/env dirname "${SCRIPT_ABSOLUTE_PATH}")";
typeset -rx PLUGIN_NAME="DNSAdministration";

###############################################################################
#       check if is running on a eSupport DR Node, exit if it is not.
###############################################################################
typeset -r ECOMSERVER_MODULE="/opt/esupport/lib/runsOnEcomServer.mod";

if [ -s ${ECOMSERVER_MODULE} ]
then
    . ${ECOMSERVER_MODULE};

    runsOnEcomServer "ED";
fi

## load application-wide constants if not already done
if [ -z "${APP_ROOT}" ]
then
    case ${SCRIPT_ROOT} in
        *lib/plugins/*/sys|*lib/plugins/*/monitors|*lib/plugins/*/executors) . ${SCRIPT_ROOT}/../../../../../lib/constants ;;
        *lib/plugins/*/bin|*lib/plugins/*/lib) . ${SCRIPT_ROOT}/../../../../lib/constants ;;
        *lib/plugins/*) . ${SCRIPT_ROOT}/../../../lib/constants ;;
        *lib/plugins) . ${SCRIPT_ROOT}/../../lib/constants ;;
        *lib|*bin) . ${SCRIPT_ROOT}/../lib/constants ;;
        *) . ${SCRIPT_ROOT}/lib/constants ;;
    esac
fi

typeset -rx PLUGIN_ROOT_DIR=${PLUGIN_DIR}/${PLUGIN_NAME};
typeset -rx PLUGIN_CONF_BASE=${PLUGIN_ROOT_DIR}/${ETC_DIRECTORY};

case ${EXPORT_ENVIRONMENT} in
    [Ss][Tt][Gg]|[Ss][Tt][Aa][Gg][Ee]) PLUGIN_CONF_ROOT=${PLUGIN_CONF_BASE}/stg ;;
    [Uu][Aa][Tt]|[Qq][Aa]) PLUGIN_CONF_ROOT=${PLUGIN_CONF_BASE}/qa ;;
    [Ii][Ss][Tt]|[Dd][Ee][Vv]|[Dd][Ee][Vv][Ee][Ll][Oo][Pp][Mm][Ee][Nn][Tt]) PLUGIN_CONF_ROOT=${PLUGIN_CONF_BASE}/dev ;;
    *) PLUGIN_CONF_ROOT=${PLUGIN_CONF_BASE} ;; ## default to production
esac

[ -z "${PLUGIN_CONF_ROOT}" ] || [ ! -s ${PLUGIN_CONF_ROOT}/plugin.properties ] && return 1;

typeset -rx PLUGIN_LOADED=true;
typeset -rx PLUGIN_CONFIG=${PLUGIN_CONF_ROOT}/plugin.properties;

[ -f ${PLUGIN_CONFIG} ] && . ${PLUGIN_CONFIG};

typeset -i AUTHORIZATION_COUNT; AUTHORIZATION_COUNT=0;

## common aliases
[ -s ${PLUGIN_LIB_DIRECTORY}/aliases ] && . ${PLUGIN_LIB_DIRECTORY}/aliases;
[ -s ${PLUGIN_LIB_DIRECTORY}/functions ] && . ${PLUGIN_LIB_DIRECTORY}/functions;

[ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "true" ] && set +x;
[ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set +x;
