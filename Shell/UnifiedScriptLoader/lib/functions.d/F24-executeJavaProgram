#===  FUNCTION  ===============================================================
#          NAME:  executeJavaProgram
#   DESCRIPTION:  Processes and implements a DNS site failover
#    PARAMETERS:  Parameters obtained via command-line flags
#       RETURNS:  0 for positive result, >1 for non-positive
#==============================================================================
function executeJavaProgram
{
    [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set -vx;
    [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "true" ] && set -vx;
    typeset METHOD_NAME="${CNAME}#executeJavaProgram";
    typeset RETURN_CODE=0;

    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "${METHOD_NAME} -> enter";
    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "Provided arguments: ${@}";

    typeset JAVA_TYPE_CLASS="class";
    typeset JAVA_TYPE_JAR="jar";

    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "JAVA_TYPE_CLASS -> ${JAVA_TYPE_CLASS}";
    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "JAVA_TYPE_JAR -> ${JAVA_TYPE_JAR}";

    if [ ${#} -lt 2 ]
    then
        RETURN_CODE=3;

        echo "executeJavaProgram - Execute a provided java program\n";
        echo "Usage: executeJavaProgram [ <jar | class> ] [ <jarfile | class name> ] [ <java arguments> ] [ <program arguments> ]
                 -> Specify if the request is a jar or a class.
                 -> The jar file or class name to execute.
                 -> Any arguments necessary to pass to the java virtual machine. These will be passed as-is.
                 -> Any arguments necessary to pass to the java program. These will be passed as-is.\n";

        [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "RETURN_CODE -> ${RETURN_CODE}";
        [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "${METHOD_NAME} -> exit";

        unset JAVA_TYPE_CLASS;
        unset JAVA_TYPE_JAR;
        unset JAVA_TYPE;
        unset JAVA_NAME;
        unset JAVA_OPTIONS;
        unset SCRIPT_ARGUMENTS;
        unset METHOD_NAME;

        [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set +vx;
        [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "true" ] && set +vx;

        return ${RETURN_CODE};
    fi

    typeset JAVA_TYPE="${1}";
    typeset JAVA_NAME="${2}";
    typeset JAVA_OPTIONS="${3}";
    typeset SCRIPT_ARGUMENTS="${4}";

    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "JAVA_TYPE -> ${JAVA_TYPE}";
    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "JAVA_NAME -> ${JAVA_NAME}";
    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "JAVA_OPTIONS -> ${JAVA_OPTIONS}";
    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "SCRIPT_ARGUMENTS -> ${SCRIPT_ARGUMENTS}";
    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "RUN COMMAND: java -classpath ${CLASSPATH} -cp ${CLASSPATH} ${JAVA_OPTIONS} ${JAVA_NAME} ${SCRIPT_ARGUMENTS}";

    [ "${JAVA_TYPE}" = "${JAVA_TYPE_CLASS}" ] && java -classpath "${CLASSPATH}" -cp "${CLASSPATH}" ${JAVA_OPTIONS} ${JAVA_NAME} "${SCRIPT_ARGUMENTS}";
    [ "${JAVA_TYPE}" = "${JAVA_TYPE_JAR}" ] && java -classpath "${CLASSPATH}" -cp "${CLASSPATH}" ${JAVA_OPTIONS} -jar ${JAVA_NAME} "${SCRIPT_ARGUMENTS}";
    typeset -i RET_CODE=${?};

    if [ -z "${RET_CODE}" ] || [ ${RET_CODE} -ne 0 ]
    then
        ${LOGGER} "ERROR" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "An error occurred executing the provided script. Please inspect logs.";

        RETURN_CODE=1;

        [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "RETURN_CODE -> ${RETURN_CODE}";
        [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "${METHOD_NAME} -> exit";

        unset JAVA_TYPE_CLASS;
        unset JAVA_TYPE_JAR;
        unset JAVA_TYPE;
        unset JAVA_NAME;
        unset JAVA_OPTIONS;
        unset SCRIPT_ARGUMENTS;
        unset METHOD_NAME;

        [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set +vx;
        [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "true" ] && set +vx;

        return ${RETURN_CODE};
    fi

    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "RETURN_CODE -> ${RETURN_CODE}";
    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && ${LOGGER} "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "${METHOD_NAME} -> exit";

    unset JAVA_TYPE_CLASS;
    unset JAVA_TYPE_JAR;
    unset JAVA_TYPE;
    unset JAVA_NAME;
    unset JAVA_OPTIONS;
    unset SCRIPT_ARGUMENTS;
    unset METHOD_NAME;

    [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set +vx;
    [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "true" ] && set +vx;

    return ${RETURN_CODE};
}
