#===  FUNCTION  ===============================================================
#          NAME:  mktemp
#   DESCRIPTION:  Implementation of the Linux mktemp utility for AIX, because
#                 AIX doesn't have it.
#    PARAMETERS:  Temporary directory to store the file in
#       RETURNS:  0 if success, 1 otherwise
#==============================================================================
function mktemp
{
    trap 'set +v; set +x' INT TERM EXIT;

    [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "true" ] && set -x;
    [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "${_TRUE}" ] && set -x;
    [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "true" ] && set -v;
    [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set -v;
    typeset METHOD_NAME="${CNAME}#${0}";
    typeset -i RETURN_CODE=0;

    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "${METHOD_NAME} -> enter";
    [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "Provided arguments: ${@}";

    [ ${#} -eq 0 ] && typeset TEMPORARY_DIRECTORY=/var/tmp || typeset TEMPORARY_DIRECTORY="${1}";
    typeset -i IS_MKTEMP_AVAILABLE=$(which mktemp > /dev/null 2>&1; echo ${?});

    case ${IS_MKTEMP_AVAILABLE} in
        0)
            /usr/bin/env mktemp --tmpdir=${TEMPORARY_DIRECTORY};
            ;;
        *)
            typeset FNAME=$(cat /dev/urandom | tr -dc "a-zA-Z0-9-_\$\?" | fold -w 9 | head -1);

            [ ! -z "${ENABLE_DEBUG}" ] && [ "${ENABLE_DEBUG}" = "${_TRUE}" ] && writeLogEntry "DEBUG" "${METHOD_NAME}" "${CNAME}" "${LINENO}" "FNAME -> ${FNAME}";

            touch ${TEMPORARY_DIRECTORY}/tmp.${FNAME};

            [ -f ${TEMPORARY_DIRECTORY}/tmp.${FNAME} ] && echo ${TEMPORARY_DIRECTORY}/tmp.${FNAME};
            ;;
    esac

    unset FNAME;
    unset IS_MKTEMP_AVAILABLE;
    unset TEMPORARY_DIRECTORY;
    unset METHOD_NAME;

    [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "true" ] && set +x;
    [ ! -z "${ENABLE_VERBOSE}" ] && [ "${ENABLE_VERBOSE}" = "${_TRUE}" ] && set +x;
    [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "true" ] && set +v;
    [ ! -z "${ENABLE_TRACE}" ] && [ "${ENABLE_TRACE}" = "${_TRUE}" ] && set +v;

    return ${RETURN_CODE};
}
