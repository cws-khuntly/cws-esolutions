// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ============================================================================
// catalina.policy - Security Policy Permissions for Tomcat 7
//
// This file contains a default set of security policies to be enforced (by the
// JVM) when Catalina is executed with the "-security" option.  In addition
// to the permissions granted here, the following additional permissions are
// granted to each web application:
//
// * Read access to the web application's document root directory
// * Read, write and delete access to the web application's working directory
//
// $Id: catalina.policy 1532508 2013-10-15 20:05:48Z markt $
// ============================================================================


// ========== SYSTEM CODE PERMISSIONS =========================================
// These permissions apply to javac
grant codeBase "file:${java.home}/lib/-" {
    permission java.security.AllPermission;
};

// These permissions apply to all shared system extensions
grant codeBase "file:${java.home}/jre/lib/ext/-" {
    permission java.security.AllPermission;
};

// These permissions apply to javac when ${java.home] points at $JAVA_HOME/jre
grant codeBase "file:${java.home}/../lib/-" {
    permission java.security.AllPermission;
};

// These permissions apply to all shared system extensions when
// ${java.home} points at $JAVA_HOME/jre
grant codeBase "file:${java.home}/lib/ext/-" {
    permission java.security.AllPermission;
};

// ========== CATALINA CODE PERMISSIONS =======================================
// These permissions apply to the daemon code
grant codeBase "file:${catalina.home}/lib/commons-daemon.jar" {
        permission java.security.AllPermission;
};

// These permissions apply to the logging API
// Note: If tomcat-juli.jar is in ${catalina.base} and not in ${catalina.home},
// update this section accordingly.
grant codeBase "file:${catalina.home}/lib/tomcat-juli.jar" {
    permission java.io.FilePermission "${java.home}${file.separator}lib${file.separator}logging.properties", "read";

    permission java.io.FilePermission "${catalina.base}${file.separator}lib${file.separator}log4j.properties", "read";
    permission java.io.FilePermission "${catalina.home}${file.separator}lib${file.separator}log4j.properties", "read";
    permission java.io.FilePermission "c:${file.separator}appvol${file.separator}ATS70${file.separator}logs", "read, write";
    permission java.io.FilePermission "c:${file.separator}appvol${file.separator}ATS70${file.separator}*", "read, write";

    permission java.lang.RuntimePermission "shutdownHooks";
    permission java.lang.RuntimePermission "getClassLoader";
    permission java.lang.RuntimePermission "setContextClassLoader";

    permission java.util.logging.LoggingPermission "control";

    permission java.util.PropertyPermission "java.util.logging.config.class", "read";
    permission java.util.PropertyPermission "java.util.logging.config.file", "read";
    permission java.util.PropertyPermission "org.apache.juli.ClassLoaderLogManager.debug", "read";
    permission java.util.PropertyPermission "catalina.base", "read";
};

// These permissions apply to the server startup code
grant codeBase "file:${catalina.home}/lib/bootstrap.jar" {
    permission java.security.AllPermission;
};

// These permissions apply to the servlet API classes
// and those that are shared across all class loaders
// located in the "lib" directory
grant codeBase "file:${catalina.home}/lib/-" {
    permission java.security.AllPermission;
};

grant codeBase "file:${catalina.home}/shared/lib/-" {
    permission java.security.AllPermission;
};

grant codeBase "file:${catalina.base}/lib/-" {
    permission java.security.AllPermission;
};

grant codeBase "file:${catalina.base}/shared/lib/-" {
    permission java.security.AllPermission;
};

// ========== WEB APPLICATION PERMISSIONS =====================================
// These permissions are granted by default to all web applications
// In addition, a web application will be given a read FilePermission
// and JndiPermission for all files and directories in its document root.
grant {
    // Required for JNDI lookup of named JDBC DataSource's and
    // javamail named MimePart DataSource used to send mail
    permission java.util.PropertyPermission "java.home", "read";
    permission java.util.PropertyPermission "java.naming.*", "read";
    permission java.util.PropertyPermission "javax.sql.*", "read";

    // OS Specific properties to allow read access
    permission java.util.PropertyPermission "os.name", "read";
    permission java.util.PropertyPermission "os.version", "read";
    permission java.util.PropertyPermission "os.arch", "read";
    permission java.util.PropertyPermission "file.separator", "read";
    permission java.util.PropertyPermission "path.separator", "read";
    permission java.util.PropertyPermission "line.separator", "read";

    // JVM properties to allow read access
    permission java.util.PropertyPermission "java.version", "read";
    permission java.util.PropertyPermission "java.vendor", "read";
    permission java.util.PropertyPermission "java.vendor.url", "read";
    permission java.util.PropertyPermission "java.class.version", "read";
    permission java.util.PropertyPermission "java.specification.version", "read";
    permission java.util.PropertyPermission "java.specification.vendor", "read";
    permission java.util.PropertyPermission "java.specification.name", "read";

    permission java.util.PropertyPermission "java.vm.specification.version", "read";
    permission java.util.PropertyPermission "java.vm.specification.vendor", "read";
    permission java.util.PropertyPermission "java.vm.specification.name", "read";
    permission java.util.PropertyPermission "java.vm.version", "read";
    permission java.util.PropertyPermission "java.vm.vendor", "read";
    permission java.util.PropertyPermission "java.vm.name", "read";

    // Required for OpenJMX
    permission java.lang.RuntimePermission "getAttribute";

    // Allow read of JAXP compliant XML parser debug
    permission java.util.PropertyPermission "jaxp.debug", "read";

    // All JSPs need to be able to read this package
    permission java.lang.RuntimePermission "accessClassInPackage.org.apache.tomcat";

    // Precompiled JSPs need access to these packages.
    permission java.lang.RuntimePermission "accessClassInPackage.org.apache.jasper.el";
    permission java.lang.RuntimePermission "accessClassInPackage.org.apache.jasper.runtime";
    permission java.lang.RuntimePermission "accessClassInPackage.org.apache.jasper.runtime.*";

    // Precompiled JSPs need access to these system properties.
    permission java.util.PropertyPermission "org.apache.jasper.runtime.BodyContentImpl.LIMIT_BUFFER", "read";
    permission java.util.PropertyPermission "org.apache.el.parser.COERCE_TO_ZERO", "read";

    // The cookie code needs these.
    permission java.util.PropertyPermission "org.apache.catalina.STRICT_SERVLET_COMPLIANCE", "read";
    permission java.util.PropertyPermission "org.apache.tomcat.util.http.ServerCookie.STRICT_NAMING", "read";
    permission java.util.PropertyPermission "org.apache.tomcat.util.http.ServerCookie.FWD_SLASH_IS_SEPARATOR", "read";

    // Applications using Comet need to be able to access this package
    permission java.lang.RuntimePermission "accessClassInPackage.org.apache.catalina.comet";

    // Applications using the legacy WebSocket implementation need to be able to access this package
    permission java.lang.RuntimePermission "accessClassInPackage.org.apache.catalina.websocket";

    // Applications using the JSR-356 WebSocket implementation need to be able to access these packages
    permission java.lang.RuntimePermission "accessClassInPackage.org.apache.tomcat.websocket";
    permission java.lang.RuntimePermission "accessClassInPackage.org.apache.tomcat.websocket.server";
};

// ========== ${CATALINA_HOME}/LIB PERMISSIONS =====================================
// Grant MySQL the ability to connect to the database
grant codeBase "file:${catalina.home}/lib/mysql-connector-java-5.1.28-bin.jar" {
    permission java.net.SocketPermission "{{ sqlServerHost }}", "connect";
};

// Grant JavaMail the ability to connect to the relay
grant codeBase "file:${catalina.home}/lib/mail-1.4.jar" {
    permission java.net.SocketPermission "{{ mailServerHost }}", "connect";
};

// ========== ${CATALINA_BASE}/LIB PERMISSIONS =====================================
// Grant MySQL the ability to connect to the database
grant codeBase "file:${catalina.base}/lib/mysql-connector-java-5.1.28-bin.jar" {
    permission java.net.SocketPermission "{{ sqlServerHost }}", "connect";
};

// Grant JavaMail the ability to connect to the relay
grant codeBase "file:${catalina.base}/lib/mail-1.4.jar" {
    permission java.net.SocketPermission "{{ mailServerHost }}", "connect";
};

// ========== ${CATALINA_BASE}/SHARED/LIB PERMISSIONS ==============================
// Grant unboundid the ability to connect to LDAP
grant codeBase "file:${catalina.base}/shared/lib/unboundid-ldapsdk-2.3.1.jar" {
    permission java.net.SocketPermission "{{ ldapServerHost }}", "connect";
};

// Grant dnsjava the ability to connect to DNS
grant codeBase "file:${catalina.base}/shared/lib/dnsjava-2.1.1.jar" {
    permission java.net.SocketPermission "*:53", "connect";
};

// Grant log4j the ability to write logs
grant codeBase "file:${catalina.base}/shared/lib/log4j-1.2.17.jar" {
    permission java.net.FilePermission "/appvol/ATS70/-/applog/-", "read, write";
    permission java.net.FilePermission "/appvol/ATS70/logs/-", "read, write";
};

// ========== ${CATALINA_HOME}/SHARED/LIB PERMISSIONS ==============================
// Grant unboundid the ability to connect to LDAP
grant codeBase "file:${catalina.home}/shared/lib/unboundid-ldapsdk-2.3.1.jar" {
    permission java.net.SocketPermission "{{ ldapServerHost }}", "connect";
};

// Grant dnsjava the ability to connect to DNS
grant codeBase "file:${catalina.home}/shared/lib/dnsjava-2.1.1.jar" {
    permission java.net.SocketPermission "*:53", "connect";
};

// Grant log4j the ability to write logs
grant codeBase "file:${catalina.home}/shared/lib/log4j-1.2.17.jar" {
    permission java.net.FilePermission "/appvol/ATS70/-/applog/-", "read, write";
    permission java.net.FilePermission "/appvol/ATS70/logs/-", "read, write";
};
