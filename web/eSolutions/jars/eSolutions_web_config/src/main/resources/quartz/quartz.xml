<?xml version="1.0" encoding="UTF-8"?>
<job-scheduling-data xmlns="http://www.quartz-scheduler.org/xml/JobSchedulingData"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.quartz-scheduler.org/xml/JobSchedulingData http://www.quartz-scheduler.org/xml/job_scheduling_data_2_0.xsd"
    version="2.0">

    <pre-processing-commands>
        <delete-jobs-in-group>*</delete-jobs-in-group>  <!-- clear all jobs in scheduler -->
        <delete-triggers-in-group>*</delete-triggers-in-group> <!-- clear all triggers in scheduler -->
    </pre-processing-commands>

    <processing-directives>
        <overwrite-existing-data>true</overwrite-existing-data> <!-- if there are any jobs/trigger in scheduler of same name (as in this file), overwrite them -->
        <ignore-duplicates>false</ignore-duplicates> <!-- if there are any jobs/trigger in scheduler of same name (as in this file), and over-write is false, ignore them rather then generating an error -->
    </processing-directives>

    <schedule>
        <job>
            <name>CheckEmailMessages</name>
            <group>eSolutions</group>
            <description>Check email messages</description>
            <job-class>com.cws.esolutions.core.quartz.CheckEmailMessages</job-class>
            <durability>false</durability>
            <recover>true</recover>
            <job-data-map>
                <entry>
                    <key>mail.protocol</key>
                    <value>pop3s</value>
                </entry>
                <entry>
                    <key>mail.host</key>
                    <value>pop.gmail.com</value>
                </entry>
                <entry>
                    <key>mail.port</key>
                    <value>995</value>
                </entry>
                <entry>
                    <key>isSSL</key>
                    <value>true</value>
                </entry>
                <entry>
                    <key>userAccount</key>
                    <value>recent:kmhuntly@gmail.com</value>
                </entry>
                <entry>
                    <key>userSalt</key>
                    <value>Pskd2LMP</value>
                </entry>
                <entry>
                    <key>userPass</key>
                    <value>3yghI/Ba4ChcsKkr45PP/hVfWk4sj3v8IcU9yzKuJuY=</value>
                </entry>
            </job-data-map>
        </job>

        <trigger>
            <cron>
                <name>CheckEmailMessagesTrigger</name>
                <group>eSolutions</group>
                <job-name>CheckEmailMessages</job-name>
                <job-group>eSolutions</job-group>
                <misfire-instruction>MISFIRE_INSTRUCTION_SMART_POLICY</misfire-instruction>
                <cron-expression>0 0/15 * * * ?</cron-expression>
            </cron>
        </trigger>
    </schedule>

    <schedule>
        <job>
            <name>Deployer</name>
            <group>eSolutions</group>
            <description>Deploy application files</description>
            <job-class>com.cws.esolutions.core.quartz.Deployer</job-class>
            <durability>false</durability>
            <recover>true</recover>
            <job-data-map />
        </job>

        <trigger>
            <cron>
                <name>DeployerTrigger</name>
                <group>eSolutions</group>
                <job-name>Deployer</job-name>
                <job-group>eSolutions</job-group>
                <misfire-instruction>MISFIRE_INSTRUCTION_SMART_POLICY</misfire-instruction>
                <cron-expression>0 0/15 * * * ?</cron-expression>
            </cron>
        </trigger>
    </schedule>

    <schedule>
        <job>
            <name>ResetRequestReaper</name>
            <group>SecurityService</group>
            <description>Remove expired reset request identifiers</description>
            <job-class>com.cws.esolutions.security.quartz.ResetRequestReaper</job-class>
            <durability>false</durability>
            <recover>true</recover>
            <job-data-map />
        </job>

        <trigger>
            <cron>
                <name>ResetRequestReaperTrigger</name>
                <group>SecurityService</group>
                <job-name>ResetRequestReaper</job-name>
                <job-group>SecurityService</job-group>
                <misfire-instruction>MISFIRE_INSTRUCTION_SMART_POLICY</misfire-instruction>
                <cron-expression>0 0/15 * * * ?</cron-expression>
            </cron>
        </trigger>
    </schedule>
</job-scheduling-data>
