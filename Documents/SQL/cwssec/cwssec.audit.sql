--
-- Definition of table CWSSEC.AUDIT
--
DROP TABLE IF EXISTS CWSSEC.AUDIT;
CREATE TABLE CWSSEC.AUDIT (
    SESSION_ID VARCHAR(100) CHARACTER SET UTF8 NOT NULL,
    USERNAME VARCHAR(45) CHARACTER SET UTF8 NOT NULL,
    CN VARCHAR(128) CHARACTER SET UTF8 NOT NULL,
    ROLE VARCHAR(45) CHARACTER SET UTF8 NOT NULL,
    APPLICATION_ID VARCHAR(128) CHARACTER SET UTF8 NOT NULL,
    APPLICATION_NAME VARCHAR(128) CHARACTER SET UTF8 NOT NULL,
    REQUEST_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    ACTION VARCHAR(45) CHARACTER SET UTF8 NOT NULL,
    SOURCE_ADDRESS VARCHAR(45) CHARACTER SET UTF8 NOT NULL,
    SOURCE_HOSTNAME VARCHAR(100) CHARACTER SET UTF8 NOT NULL,
    INDEX IDX_AUDIT (CN ASC),
    CONSTRAINT FK_LGN_GUID
        FOREIGN KEY (CN)
        REFERENCES CWSSEC.USERS (CN)
            ON DELETE CASCADE
            ON UPDATE CASCADE,
    FULLTEXT KEY FT_AUDIT (USERNAME, CN, ROLE, SOURCE_ADDRESS, SOURCE_HOSTNAME, ACTION)
) ENGINE=MyISAM DEFAULT CHARSET=UTF8 ROW_FORMAT=COMPACT COLLATE UTF8_GENERAL_CI;
COMMIT;

ALTER TABLE CWSSEC.AUDIT CONVERT TO CHARACTER SET UTF8 COLLATE UTF8_GENERAL_CI;
COMMIT;

DELIMITER $$

--
-- Definition of procedure CWSSEC.getAuditEntryByAttribute
--
DROP PROCEDURE IF EXISTS CWSSEC.getAuditEntryByAttribute$$
/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER' */ $$
CREATE PROCEDURE CWSSEC.getAuditEntryByAttribute(
    IN attributeName VARCHAR(100)
)
BEGIN
    SELECT
        SESSION_ID,
        USERNAME,
        CN,
        ROLE,
        APPLICATION_ID,
        APPLICATION_NAME,
        REQUEST_TIMESTAMP,
        ACTION,
        SOURCE_ADDRESS,
        SOURCE_HOSTNAME,
    MATCH (USERNAME, CN, ROLE, SOURCE_ADDRESS, SOURCE_HOSTNAME, ACTION)
    AGAINST (+attributeName WITH QUERY EXPANSION)
    FROM CWSSEC.AUDIT
    WHERE MATCH (USERNAME, CN, ROLE, SOURCE_ADDRESS, SOURCE_HOSTNAME, ACTION)
    AGAINST (+attributeName IN BOOLEAN MODE);
END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$
COMMIT$$

--
-- Definition of procedure getAuditCount
--
DROP PROCEDURE IF EXISTS CWSSEC.getAuditCount$$
/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER' */ $$
CREATE PROCEDURE CWSSEC.getAuditCount(
    IN userguid VARCHAR(128)
)
BEGIN
    SELECT COUNT(*)
    FROM AUDIT
    WHERE CN = userguid;
END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$
COMMIT$$

--
-- Definition of procedure getAuditInterval
--
DROP PROCEDURE IF EXISTS CWSSEC.getAuditInterval$$
/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER' */ $$
CREATE PROCEDURE CWSSEC.getAuditInterval(
    IN userguid VARCHAR(128),
    IN startRow INT
)
BEGIN
    SELECT
        SESSION_ID,
        USERNAME,
        CN,
        ROLE,
        APPLICATION_ID,
        APPLICATION_NAME,
        REQUEST_TIMESTAMP,
        ACTION,
        SOURCE_ADDRESS,
        SOURCE_HOSTNAME
    FROM AUDIT
    WHERE CN = userguid
    ORDER BY REQUEST_TIMESTAMP DESC
    LIMIT startRow, 20;
END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$
COMMIT$$

--
-- Definition of procedure insertAuditEntry
--
DROP PROCEDURE IF EXISTS CWSSEC.insertAuditEntry$$
/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER' */ $$
CREATE PROCEDURE CWSSEC.insertAuditEntry(
    IN usersessid VARCHAR(100),
    IN username VARCHAR(45),
    IN userguid VARCHAR(128),
    IN userrole VARCHAR(45),
    IN applid VARCHAR(128),
    IN applname VARCHAR(128),
    IN useraction VARCHAR(45),
    IN srcaddr VARCHAR(45),
    IN srchost VARCHAR(128)
)
BEGIN
    INSERT INTO AUDIT (SESSION_ID, USERNAME, CN, ROLE, APPLICATION_ID, APPLICATION_NAME, REQUEST_TIMESTAMP, ACTION, SOURCE_ADDRESS, SOURCE_HOSTNAME)
    VALUES (usersessid, username, userguid, userrole, applid, applname, CURRENT_TIMESTAMP(), useraction, srcaddr, srchost);
END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$
COMMIT$$

DELIMITER ;
COMMIT;
